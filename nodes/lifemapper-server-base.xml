<?xml version="1.0" standalone="no"?>

<kickstart>

	<description>
	Lifemapper-server roll. 
	LMserver and LMweb servers common install 
	</description>

	<copyright>
	Copyright (c) 2000 - 2012 The Regents of the University of California.
	All rights reserved. Rocks(r) v5.5/v6.0 www.rocksclusters.org
	</copyright>

	<changelog>
	</changelog>

	<package>flex</package>

        <!-- RPM repos needed for postgresql,postgis,mapserver -->
	<package>pgdg-centos91</package>
	<package>elgis-release</package>

	<!-- lifemapper dependencies -->
	<package>giflib-devel</package>
	<package>byacc</package>
	<package>readline-devel</package>
	<package>pakchois</package>
	<package>neon</package>
	<package>hdf4</package>
	<package>hdf4-devel</package>
	<package>hdf5</package>
	<package>hdf5-devel</package>
	<package>cmake</package>
	<package>screen</package>
	<package>lifemapper-cctools</package>
	<package>lifemapper-cmd</package>
	<package>lifemapper-proj</package>
	<package>lifemapper-geos</package>
	<package>lifemapper-gdal</package>
	<package>lifemapper-tiff</package>

	<!-- python prerequisites -->
	<package>opt-lifemapper-numexpr</package>
	<package>opt-lifemapper-cython</package>
	<package>opt-lifemapper-pytables</package>
	<package>opt-lifemapper-egenix-mx-base</package>
	<package>opt-lifemapper-psycopg2</package>
	<package>opt-lifemapper-faulthandler</package>
	<package>opt-lifemapper-requests</package>

	<!-- lifemapper distro -->
	<package>lifemapper-lmserver</package>
	<package>rocks-lifemapper</package>
	<package>roll-lifemapper-server-usersguide</package>

	<!-- mapserver and prereq -->
	<package>opt-lifemapper-mapserver </package>
	<package>bitstream-vera-fonts-common</package>
	<package>bitstream-vera-sans-fonts</package>
	<package>fribidi</package>
	<package>postgresql91-libs</package>
	<!-- removed mapserver, building from source for python mapscript -->

	<!-- lifemapper data -->
	<package>lifemapper-climate-data</package>
	<package>lifemapper-species-data</package>

<post>

/sbin/ldconfig

# set up lmwriter user
ID=`/bin/egrep -i "^lmwriter" /etc/group`
if [ "$ID" == "" ] ; then
    # adding lmwriter user
    /usr/sbin/useradd -c "Lifemapper user" lmwriter
else
    # adding lmwriter user, group already exists (from lifemapper-compute roll)
    /usr/sbin/useradd -c "Lifemapper user" -g lmwriter lmwriter
fi

# set up solr user
ID=`/bin/egrep -i "^solr" /etc/group`
if [ "$ID" == "" ] ; then
    # adding solr user
    /usr/sbin/useradd -c "Solr user" solr
fi

</post>

<post>
# FE directory NOT exported to /share
/bin/mkdir -p /state/partition1/lmserver/data/species
/bin/mkdir -p /state/partition1/lmserver/data/image
/bin/mkdir -p /state/partition1/lmserver/data/test
/bin/mkdir -p /state/partition1/lmserver/data/tmpUpload
/bin/chgrp -R lmwriter /state/partition1/lmserver
/bin/chmod -R g+ws /state/partition1/lmserver

# FE directory NOT exported to /share
/bin/mkdir -p /state/partition1/lmscratch
/bin/mkdir -p /state/partition1/lmscratch/log
/bin/mkdir -p /state/partition1/lmscratch/log/apache
/bin/mkdir -p /state/partition1/lmscratch/log/users
/bin/mkdir -p /state/partition1/lmscratch/log/errors
/bin/chgrp -R lmwriter /state/partition1/lmscratch
/bin/chmod -R g+ws /state/partition1/lmscratch

# FE directory shared with lifemapper-compute, exported to /share
/bin/mkdir -p /state/partition1/lm
/bin/mkdir -p /state/partition1/lm/data/layers
/bin/mkdir -p /state/partition1/lm/data/archive
/bin/chgrp -R lmwriter /state/partition1/lm
/bin/chmod -R g+ws /state/partition1/lm

# PID directory
/bin/mkdir -p /var/run/lifemapper
/bin/chgrp -R lmwriter /var/run/lifemapper
/bin/chmod -R g+ws /var/run/lifemapper

for item in "config" "Lm*" "__init__.py*" ; do
    /bin/chgrp -R lmwriter /opt/lifemapper/$item
    /bin/chmod -R g+ws /opt/lifemapper/$item
done

<file name="/etc/auto.share" mode="append">
lmserver &Kickstart_PrivateHostname;:/export/&amp;
</file>

/etc/init.d/autofs restart
/opt/rocks/bin/rocks sync users

</post>

</kickstart>
