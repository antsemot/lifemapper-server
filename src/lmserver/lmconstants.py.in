"""
@license: gpl2
@copyright: Copyright (C) 2014, University of Kansas Center for Research

          Lifemapper Project, lifemapper [at] ku [dot] edu, 
          Biodiversity Institute,
          1345 Jayhawk Boulevard, Lawrence, Kansas, 66045, USA
   
          This program is free software; you can redistribute it and/or modify 
          it under the terms of the GNU General Public License as published by 
          the Free Software Foundation; either version 2 of the License, or (at 
          your option) any later version.
  
          This program is distributed in the hope that it will be useful, but 
          WITHOUT ANY WARRANTY; without even the implied warranty of 
          MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU 
          General Public License for more details.
  
          You should have received a copy of the GNU General Public License 
          along with this program; if not, write to the Free Software 
          Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 
          02110-1301, USA.
"""
# TODO: move lmconstants.py to LmServerCommon, pull out those shared also with LmCompute
# and put them in LmCommon/src/common/lesscommonconstants.py 
import os
import socket
from types import IntType, FloatType
from osgeo.gdalconst import GDT_Unknown, GDT_Byte, GDT_UInt16, GDT_Int16, \
                            GDT_UInt32, GDT_Int32, GDT_Float32, GDT_Float64, \
                            GDT_CInt16, GDT_CInt32, GDT_CFloat32, GDT_CFloat64
from osgeo.ogr import wkbPoint, wkbLineString, wkbPolygon, wkbMultiPoint, \
                      wkbMultiLineString, wkbMultiPolygon

class DbUser:
# ............................................................................
   Map = 'mapuser'
   WebService = 'wsuser'
   Pipeline = 'sdlapp'
   Job = 'jobuser'
   
class RandomizeMethods:
# ............................................................................
   NOT_RANDOM = 0
   SWAP = 1
   SPLOTCH = 2
   
class PrimaryEnvironment:
   TERRESTRIAL = 1
   MARINE = 2
   
# # ............................................................................
# class JobType:
# # ............................................................................
#    MODEL = 1
#    PROJECTION = 2
   
# ............................................................................
# InputType and ProcessType allow Compute Resources to request jobs by 
# locally available software or data 
# ............................................................................
# ............................................................................
class InputDataType:
# ............................................................................
   LM_LOWRES_CLIMATE = 1
   LM_HIRES_CLIMATE = 2
   EDAC = 3
   
   USER_PRESENCE_ABSENCE = 11
   USER_ANCILLARY = 12
   
# ............................................................................
class ProcessType:
# ............................................................................
   # .......... SDM ..........
   ATT_MODEL = 110
   ATT_PROJECT = 120
   OM_MODEL = 210
   OM_PROJECT = 220
   # .......... RAD ..........
   RAD_BUILDSHAPE = 305
   RAD_INTERSECT = 310
   RAD_COMPRESS = 320
   RAD_SWAP = 331
   RAD_SPLOTCH = 332
   RAD_CALCULATE = 340
   # .......... GBIF Query ..........
   GBIF_TAXA_OCCURRENCE = 405
   # .......... Notify ..........
   SMTP = 510
   
# ............................................................................
class ValueCalculation:
# ............................................................................
   WEIGHTED_MEAN = 1
   LARGEST_CLASS = 2

# ............................................................................
class JobStage:
# ............................................................................
   """ 
   Constants to define the stages of any Job:
         RAD w/ Experiment, Bucket, or PamSum
         SDM w/ Model or Projection
         Common w/ General (exists) and Notify
   """
   # ==========================================================================   
   #           Valid Stage for All Jobs and Objects                     
   # ==========================================================================
   # This Job object has not yet been processed
   GENERAL = 0
   # ==========================================================================   
   #           Valid Stage for RAD Jobs and Objects                        
   # ==========================================================================
   # RADIntersectJob contains RADExperiment object
   INTERSECT = 10
   # _RadCompressJob contains Original or Splotch Pam 
   COMPRESS = 20
   # _RadSwapJob contains RADBucket and random PamSum
   SWAP = 31
   SPLOTCH = 32
   # _RadCalculateJob contains original or random PamSum
   CALCULATE = 40
   # ==========================================================================   
   #           Valid Stage for SDM Jobs and Objects                     
   # ==========================================================================
   # SDMOccurrenceJob contains OccurrenceSet 
   OCCURRENCE = 105
   # SDMModelJob contains SDMModel 
   MODEL = 110
   # SDMProjectionJob contains SDMProjection 
   PROJECT = 120
   # ==========================================================================   
   #           Valid Stage for Notification Jobs and Objects                     
   # ==========================================================================
   # This Job object is complete, and the user must be notified
   NOTIFY = 500
   
   
# ............................................................................
class JobFamily:
# ............................................................................
   SDM = 1
   RAD = 2
   
# ............................................................................
class ReferenceType:
# ............................................................................
   SDMModel = 101
   SDMProjection = 102
   SDMExperiment = 103
   OccurrenceSet = 104
   RADExperiment = 201
   Bucket = 202
   OriginalPamSum = 203
   RandomPamSum = 204
   
# ............................................................................
class JobStatus:
# ............................................................................
   """ 
   Constants to define the steps of a discrete Job within a pipeline.
   """
   # ==========================================================================
   # Pull / Push job statuses.  Replaces older statuses
   GENERAL = 0
   INITIALIZE = 1
   PULL_REQUESTED = 90
   PULL_COMPLETE = 100
   COMPUTE_INITIALIZED = 110
   RUNNING = 120
   COMPUTED = 130
   PUSH_REQUESTED = 140
   PUSHED = 150
   PUSH_COMPLETE = 200
#    NOTIFY_READY = 210
   COMPLETE = 300
   
   GENERAL_ERROR = 1000
   UNKNOWN_ERROR = 1001
   MODEL_ERROR = 1002
   PUSH_FAILED = 1100
   
   # ==========================================================================   
   #                               OLD status                              =
   # ==========================================================================
   # Created
   #GENERAL = 0
   # Ready to Dispatch (Pre-conditions met)
   #INITIALIZE = 1
   # In Pipeline Dispatcher Queue (Status.QUEUED/2)
   DISPATCH_QUEUE = 10
   # Queued on frontend (OMJobStatus.QUEUED/10)
   CLUSTER_ACCEPTED = 11
   # Pipeline Dispatcher completed (Status.JOB_DISPATCHED/3)
   DISPATCH_COMPLETE = 15
   # In Waiter Queue (Status.JOB_BEGIN/4)
   WAIT_QUEUE = 20 
   # Frontend successfully dispatched to Node (OMJobStatus,DISPATCHED/11)
   CLUSTER_DISPATCHED = 21
   # model or projection file successfully written to the node (OMJobStatus,COMPLETED/12)
   CLUSTER_COMPLETED = 22
   # Waiter completed (Status.JOB_COMPLETE/5)
   WAIT_COMPLETE = 25
   # In Retriever Queue (Status.JOB_RETRIEVE/6)
   RETRIEVE_QUEUE = 30
   # Job retrieved and written (Status.JOB_CATALOGUED/7)
   RETRIEVE_COMPLETE = 35
   # model or projection file successfully deleted from the node 
   # and/or local database
   CLUSTER_DELETED = 36
   # Obsolete (Status.OBSOLETE/9)
   OBSOLETE = 60
   # (OMJobStatus.EXPIRED/14)
   CLUSTER_EXPIRED = 61
   
   # Not found in database, could be prior to insertion
   NOT_FOUND = 404



   # ==========================================================================
   # =                              Common Errors                             =
   # ==========================================================================
   # Database
   # ............................................
   DB_CREATE_ERROR = 1201
   DB_DELETE_ERROR = 1202
   DB_INSERT_ERROR = 1203
   DB_READ_ERROR = 1204
   DB_UPDATE_ERROR = 1205
   
   # I/O
   # ............................................
   IO_READ_ERROR = 1301
   IO_WRITE_ERROR = 1302
   IO_WAIT_ERROR = 1303

   # ==========================================================================   
   # =                             General Errors                             =
   # ==========================================================================
   #GENERAL_ERROR = 1000
   UNKNOWN_ERROR = 1001
   DEPENDENCY_ERROR = 1002
   
   # ==========================================================================   
   # =                            Lifemapper Errors                           =
   # ==========================================================================
   LM_GENERAL_ERROR = 2000
   
   # Python errors
   # ............................................
   LM_PYTHON_ERROR = 2100
   LM_PYTHON_MODULE_IMPORT_ERROR = 2101
   LM_PYTHON_ATTRIBUTE_ERROR = 2102
   LM_PYTHON_EXPAT_ERROR = 2103

   # Lifemapper job errors
   # ............................................
   LM_JOB_ERROR = 2200
   LM_JOB_NOT_FOUND = 2201
   LM_JOB_NOT_READY = 2202
      
   # Lifemapper data errors
   # ............................................
   LM_DATA_ERROR = 2300
   LM_POINT_DATA_ERROR = 2300
   
   # Lifemapper Pipeline errors
   LM_PIPELINE_ERROR = 2400
   LM_PIPELINE_WRITEFILE_ERROR = 2401
   LM_PIPELINE_WRITEDB_ERROR = 2402
   LM_PIPELINE_UPDATEOCC_ERROR = 2403

   LM_PIPELINE_DISPATCH_ERROR = 2415

   # ==========================================================================   
   # =                           SDM Errors                          =
   # ==========================================================================
   OM_GENERAL_ERROR = 3000
      
   # Error in request file
   # ............................................
   OM_REQ_ERROR = 3100
      
   # Algorithm error
   # ............................................
   OM_REQ_ALGO_ERROR = 3110
   OM_REQ_ALGO_MISSING_ERROR = 3111
   OM_REQ_ALGO_INVALID_ERROR = 3112
      
   # Algorithm Parameter error
   # ............................................
   # ............................................
   OM_REQ_ALGOPARAM_ERROR = 3120
   OM_REQ_ALGOPARAM_MISSING_ERROR = 3121
   OM_REQ_ALGOPARAM_INVALID_ERROR = 3122
   OM_REQ_ALGOPARAM_OUT_OF_RANGE_ERROR = 3123
    
   # Layer error
   # ............................................
   OM_REQ_LAYER_ERROR = 3130
   OM_REQ_LAYER_MISSING_ERROR = 3131
   OM_REQ_LAYER_INVALID_ERROR = 3132
   OM_REQ_LAYER_BAD_FORMAT_ERROR = 3134
   OM_REQ_LAYER_BAD_URL_ERROR = 3135
    
   # Points error
   # ............................................
   OM_REQ_POINTS_ERROR = 3140
   OM_REQ_POINTS_MISSING_ERROR = 3141
   OM_REQ_POINTS_OUT_OF_RANGE_ERROR = 3143
   
   # Projection error
   # ............................................
   OM_REQ_PROJECTION_ERROR = 3150
   
   # Coordinate system error
   # ............................................
   OM_REQ_COORDSYS_ERROR = 3160
   OM_REQ_COORDSYS_MISSING_ERROR = 3161
   OM_REQ_COORDSYS_INVALID_ERROR = 3162
   
   # Error in openModeller execution
   # ............................................
   OM_EXEC_ERROR = 3200
   
   # Error generating model
   # ............................................
   OM_EXEC_MODEL_ERROR = 3210
   
   # Error generating projection
   # ............................................
   OM_EXEC_PROJECTION_ERROR = 3220
    
   # ==========================================================================   
   # =                               HTTP Errors                              =
   # ==========================================================================
   # Last 3 digits are the http error code, only 400 and 500 levels listed
   HTTP_GENERAL_ERROR = 4000
      
   # Client error
   # ............................................
   HTTP_CLIENT_BAD_REQUEST = 4400
   HTTP_CLIENT_UNAUTHORIZED = 4401
   HTTP_CLIENT_FORBIDDEN = 4403
   HTTP_CLIENT_NOT_FOUND = 4404
   HTTP_CLIENT_METHOD_NOT_ALLOWED = 4405
   HTTP_CLIENT_NOT_ACCEPTABLE = 4406
   HTTP_CLIENT_PROXY_AUTHENTICATION_REQUIRED = 4407
   HTTP_CLIENT_REQUEST_TIMEOUT = 4408
   HTTP_CLIENT_CONFLICT = 4409
   HTTP_CLIENT_GONE = 4410
   HTTP_CLIENT_LENGTH_REQUIRED = 4411
   HTTP_CLIENT_PRECONDITION_FAILED = 4412
   HTTP_CLIENT_REQUEST_ENTITY_TOO_LARGE = 4413
   HTTP_CLIENT_REQUEST_URI_TOO_LONG = 4414
   HTTP_CLIENT_UNSUPPORTED_MEDIA_TYPE = 4415
   HTTP_CLIENT_REQUEST_RANGE_NOT_SATISFIABLE = 4416
   HTTP_CLIENT_EXPECTATION_FAILED = 4417

   # Server error
   # ............................................
   HTTP_SERVER_INTERNAL_SERVER_ERROR = 4500
   HTTP_SERVER_NOT_IMPLEMENTED = 4501
   HTTP_SERVER_BAD_GATEWAY = 4502
   HTTP_SERVER_SERVICE_UNAVAILABLE = 4503
   HTTP_SERVER_GATEWAY_TIMEOUT = 4504
   HTTP_SERVER_HTTP_VERSION_NOT_SUPPORTED = 4505
   
   # Not found in database, could be prior to insertion
   NOT_FOUND = 404
   
   # ==========================================================================   
   # =                             Database Errors                            =
   # ==========================================================================
   #   """
   #   Last digit meaning:
   #      0: General error
   #      1: Failed to read
   #      2: Failed to write
   #      3: Failed to delete
   #   """
   DB_GENERAL_ERROR = 5000
   
   # Job
   # ............................................
   DB_JOB_ERROR = 5100
   DB_JOB_READ_ERROR = 5101
   DB_JOB_WRITE_ERROR = 5102
   DB_JOB_DELETE_ERROR = 5103
   
   # Layer
   # ............................................
   DB_LAYER_ERROR = 5200
   DB_LAYER_READ_ERROR = 5201
   DB_LAYER_WRITE_ERROR = 5202
   DB_LAYER_DELETE_ERROR = 5203
   
   # Layer node
   # ............................................
   DB_LAYERNODE_ERROR = 5300
   DB_LAYERNODE_READ_ERROR = 5301
   DB_LAYERNODE_WRITE_ERROR = 5302
   DB_LAYERNODE_DELETE_ERROR = 5303
   
   # ==========================================================================   
   # =                                IO Errors                               =
   # ==========================================================================
   #   """
   #   Last digit meaning:
   #      0: General error
   #      1: Failed to read
   #      2: Failed to write
   #      3: Failed to delete
   #   """
   IO_GENERAL_ERROR = 6000
   
   # Model
   # ............................................
   IO_MODEL_ERROR = 6100

   # Model request
   # ............................................
   IO_MODEL_REQUEST_ERROR = 6110
   IO_MODEL_REQUEST_READ_ERROR = 6111
   IO_MODEL_REQUEST_WRITE_ERROR = 6112
   IO_MODEL_REQUEST_DELETE_ERROR = 6113
   
   # Model script
   # ............................................
   IO_MODEL_SCRIPT_ERROR = 6120
   IO_MODEL_SCRIPT_READ_ERROR = 6121
   IO_MODEL_SCRIPT_WRITE_ERROR = 6122
   IO_MODEL_SCRIPT_DELETE_ERROR = 6123

   # Model output
   # ............................................
   IO_MODEL_OUTPUT_ERROR = 6130
   IO_MODEL_OUTPUT_READ_ERROR = 6131
   IO_MODEL_OUTPUT_WRITE_ERROR = 6132
   IO_MODEL_OUTPUT_DELETE_ERROR = 6133
   
   # Projection
   # ............................................
   IO_PROJECTION_ERROR = 6200

   # Projection request
   # ............................................
   IO_PROJECTION_REQUEST_ERROR = 6210
   IO_PROJECTION_REQUEST_READ_ERROR = 6211
   IO_PROJECTION_REQUEST_WRITE_ERROR = 6212
   IO_PROJECTION_REQUEST_DELETE_ERROR = 6213
   
   # Projection script
   # ............................................
   IO_PROJECTION_SCRIPT_ERROR = 6220
   IO_PROJECTION_SCRIPT_READ_ERROR = 6221
   IO_PROJECTION_SCRIPT_WRITE_ERROR = 6222
   IO_PROJECTION_SCRIPT_DELETE_ERROR = 6223

   # Projection output
   # ............................................
   IO_PROJECTION_OUTPUT_ERROR = 6230
   IO_PROJECTION_OUTPUT_READ_ERROR = 6231
   IO_PROJECTION_OUTPUT_WRITE_ERROR = 6232
   IO_PROJECTION_OUTPUT_DELETE_ERROR = 6233
   
   # Layer
   # ............................................
   IO_LAYER_ERROR = 6300
   IO_LAYER_READ_ERROR = 6301
   IO_LAYER_WRITE_ERROR = 6302
   IO_LAYER_DELETE_ERROR = 6303
   
   # Matrix
   # ............................................
   IO_MATRIX_ERROR = 6400
   IO_MATRIX_READ_ERROR = 6401
   IO_MATRIX_WRITE_ERROR = 6402
   IO_MATRIX_DELETE_ERROR = 6403

   # Pickled RAD Objects
   # ............................................
   IO_INDICES_ERROR = 6500
   IO_INDICES_READ_ERROR = 6501
   IO_INDICES_WRITE_ERROR = 6502
   IO_INDICES_DELETE_ERROR = 6503

   # Occurrence Set jobs
   # ............................................
   IO_OCCURRENCE_SET_ERROR = 6600
   IO_OCCURRENCE_SET_READ_ERROR = 6601
   IO_OCCURRENCE_SET_WRITE_ERROR = 6602
   IO_OCCURRENCE_SET_DELETE_ERROR = 6603

   # ==========================================================================   
   # =                               SGE Errors                               =
   # ==========================================================================
   SGE_GENERAL_ERROR = 7000
   SGE_BASH_ERROR = 7100

   # ==========================================================================   
   # =                           RAD Errors                                   =
   # ==========================================================================
   RAD_GENERAL_ERROR = 8000
  
   RAD_INTERSECT_ERROR = 8100
   RAD_INTERSECT_ZERO_LAYERS_ERROR = 8110

   RAD_COMPRESS_ERROR = 8200
   
   RAD_CALCULATE_ERROR = 8300
   
   RAD_SWAP_ERROR = 8400
   RAD_SWAP_TOO_FEW_COLUMNS_OR_ROWS_ERROR = 8410
   
   RAD_SPLOTCH_ERROR = 8500
   RAD_SPLOTCH_PYSAL_NEIGHBOR_ERROR = 8510

   # ==========================================================================   
   #                               Compute Status                             =
   # ==========================================================================
   # 301000-301999  - Process (3) openModeller Model SDM (01)   
   # ............................................
   # Error in request file
   OM_MOD_REQ_ERROR = 301100
   # Algorithm error
   OM_MOD_REQ_ALGO_INVALID_ERROR = 301112
   # Algorithm Parameter error
   OM_MOD_REQ_ALGOPARAM_MISSING_ERROR = 301121
   # Layer error
   OM_MOD_REQ_LAYER_ERROR = 301130
   # Points error
   OM_MOD_REQ_POINTS_MISSING_ERROR = 301141
   OM_MOD_REQ_POINTS_OUT_OF_RANGE_ERROR = 301143
   
   # 301000-301999  - Process (3) openModeller SDM Projection (02)   
   # ............................................
   OM_PROJECTION_ERROR = 302150 
   
# ............................................................................
class Priority:
# ............................................................................
   """ 
   Constants to define the priority of a Model or Projection Job.
   """
   LOW = 0
   NORMAL = 1
   HIGH = 2
   OBSOLETE = 3
   ABSENT = 4
   REQUESTED = 5
   
# # ............................................................................
# class ParameterSetType:
# 
# # ............................................................................
#    """
#    Constants to define whether a set of parameters are the Minimum, Maximum,
#    or Default values or whether they are a unique set for an experiment.
#    """
#    UNIQUE = 0
#    MIN = 1
#    DEFAULT = 2
#    MAX = 3

# ............................................................................
class RADLayerType:

# ............................................................................
   """
   Constants to define whether a (RAD) layer is a 
   PresenceAbsenceLayer or AncillaryLayer 
   """
   PRESENCEABSENCE = 1
   ANCILLARY = 2

# ............................................................................
# Pipeline parameters
KILL_BASENAME = 'dieevilthreads'
SEEDER_KILL_BASENAME = 'seeder.die'
WORKER_JOB_LIMIT = 50

# ............................................................................
# Modeling parameters
DEFAULT_ALGORITHMS = ['BIOCLIM', 'GARP_BS', 'ATT_MAXENT'] 
DEFAULT_MODEL_SCENARIO = 'CRU_CL_2.0_x_hadley_diff'
DEFAULT_PROJECTION_SCENARIOS = ['hadley_diff_a1f_x_CRU_CL_2.0', 'hadley_diff_a2c_x_CRU_CL_2.0', 'hadley_diff_b1a_x_CRU_CL_2.0']
DEFAULT_POINT_QUERY = 'lm_getMicroOccurrencesBySet'
FLOAT_DIGITS = 5
POINT_COUNT_MIN = 30
POINT_COUNT_MAX = 10000

CLUSTER_WEBSERVER = "birc.biodiversity.ku.edu"
PIPELINE_TROUBLESHOOTERS = ["astewart@ku.edu", "cjgrady@ku.edu"]

SDM_ID = "lmSdm"
RAD_ID = "lmRad"

# ............................................................................
# Time constants in Modified Julian Day (MJD) units 
ONE_MONTH = 1.0 * 30
ONE_DAY = 1.0
ONE_HOUR = 1.0/24.0
ONE_MIN = 1.0/1440.0
ONE_SEC = 1.0/86400.0

# Time formats
ISO_8601_TIME_FORMAT_FULL = "%Y-%m-%dT%H:%M:%SZ"
ISO_8601_TIME_FORMAT_TRUNCATED = "%Y-%m-%d"
YMD_HH_MM_SS = "%Y-%m-%d %H:%M%S"
   
# ............................................................................
LM_MODULE = 'lm'
SDM_MODULE = 'sdm'
RAD_MODULE = 'rad'

# Web services constants
ALGOPARAMS_SERVICE = 'algoparams'
ALGORITHMS_SERVICE = 'algorithms'
EXPERIMENTS_SERVICE = 'experiments'
BUCKETS_SERVICE = 'buckets'
PAMSUMS_SERVICE = 'pamsums'
LAYERS_SERVICE = 'layers'
LAYERTYPES_SERVICE = 'typecodes'
MODELS_SERVICE = 'models'
OCCURRENCES_SERVICE = 'occurrences'
PROJECTIONS_SERVICE = 'projections'
SCENARIOS_SERVICE = 'scenarios'
# Generic layersets, not Scenarios
LAYERSETS_SERVICE = 'layersets'
# Biogeography Tools
SHAPEGRIDS_SERVICE = 'shpgrid'

SERVICES_PREFIX = 'services'
HINT_PREFIX = 'hint'


# ............................................................................
# Lifemapper RAD constants
ORGANISM_LAYER_KEY = 'orgLayerIndices'
ENVIRONMENTAL_LAYER_KEY = 'envLayerIndices'
PRESENCE_INDEX_PREFIX = 'indices_'
LAYER_INDEX_PREFIX = 'lyridx_'
SPLOTCH_PREFIX = 'splotch_'
SHAPEGRID_PREFIX = 'shpgrid_'
ATTR_MATRIX_PREFIX = 'attrMtx_'
ATTR_TREE_PREFIX = 'attrTree_'
PAM_PREFIX = 'pam_'
PAMSUM_PREFIX = 'pamsum_'
GRIM_PREFIX = 'grim_'
NUMPY_EXTENSION = 'npy'
PICKLE_EXTENSION = 'pkl'
CellShape = ""
# ............................................................................
# Lifemapper xml namespace and prefix
LM_NAMESPACE = "http://lifemapper.org"
LM_NS_PREFIX = "lm"

# Lifemapper Database
LM_SCHEMA = 'lm3' 

# Absolute paths
APP_DIR = '@LMHOME@'
SAN_DATA_DIR = '@DATADIR@'
LM2_VAR_DIR = '@LMWEB@'
TEMP_DIR = '@TEMPDIR@'

# Relative paths
LOG_PATH = 'log'
POINT_PATH = 'points'
ENV_DATA_PATH = 'ClimateData'
USER_DATA_PATH = 'UserData'
USER_RAD_PATH_PREFIX = 'rad'
USER_LAYER_PATH = 'Layers'
USER_LYR_PREFIX = 'lyr_'
IMAGE_PATH = 'image'
SESSION_PATH = 'sessions'
WEB_MODULES_PATH = 'LmWebServer'
WEB_PATH = 'public_html'
ID_PLACEHOLDER = '#id#'
PIPELINE_DATA_PATH = 'LmDbServer/populate'

# mapfilename info
NAME_SEPARATOR = '_'
EXTENSION_SEPARATOR = '.'
# LM2 archive mapservice for OccurrenceSets and their Projections.
DATA_MAP_PREFIX = 'data_'
# other/ancillary layer map prefix
USER_MAP_PREFIX = 'usr_'
# RAD organism layer map prefix
RAD_ORG_MAP_PREFIX = 'rado_'
# other/ancillary layer map prefix
RAD_ANC_MAP_PREFIX = 'rada_'
# other/ancillary layer map prefix
ANC_MAP_PREFIX = 'anc_'
# new prefix
SCEN_MAP_PREFIX = 'scen_'
USDA_MAP_PREFIX = 'usda_'
MAP_EXTENSION = '.map'

# SPECIES LAYER STYLES FOR CHANGETHINKING
CT_SPECIES_KEYWORD = 'NatureServe'
CT_SPECIES_LAYER_STYLES  = {'blue':  '           SYMBOL \'hatch\'\n' +
                                     '           SIZE 5\n' +
                                     '           ANGLE 35\n' +
                                     '           WIDTH 0.91\n' +
                                     '           OUTLINECOLOR 0 0 0\n' +
                                     '           COLOR 90 116 232\n',
                            'green': '           SYMBOL \'line-horizontal\'\n' +
                                     '           WIDTH 0.91\n' + 
                                     '           OUTLINECOLOR 0 0 0\n' +
                                     '           COLOR 180 230 102\n',
                            'red':   '           SYMBOL \'hatch\'\n' +
                                     '           SIZE 5\n' +
                                     '           ANGLE 65\n' +
                                     '           WIDTH 0.91\n' +
                                     '           OUTLINECOLOR 0 0 0\n' +
                                     '           COLOR 190 16 32\n'}

# DATA FORMATS
class OutputFormat:
# ............................................................................
   TAR_GZ = '.tar.gz'
   TXT = '.txt'
   XML = '.xml'
   ZIP = '.zip'

# Geospatial data format info
RASTER_EXTENSION = '.tif'
SHAPE_EXTENSION = '.shp'
SHAPEFILE_EXTENSIONS = [".shp", ".shx", ".dbf", ".prj", ".sbn", ".sbx", ".fbn", 
                        ".fbx", ".ain", ".aih", ".ixs", ".mxs", ".atx", 
                        ".shp.xml", ".cpg"]
SHAPEFILE_MAX_STRINGSIZE = 255
# GDAL string constants supported here, and associated file extensions
TMP_FORMAT = '.tmp'
# {GDALDriverName: (ext, {Keyword Args/ create options})}
GDALFormats = {'AAIGrid': ('.asc', {'DECIMAL_PRECISION': 6, 
                                    'FORCE_CELLSIZE':'YES'}),
               'GTiff': ('.tif', {}),
               'HFA': ('.img', {})
               }
DEFAULT_PROJECTION_FORMAT = 'GTiff'
GDALDataTypes = (GDT_Unknown, GDT_Byte, GDT_UInt16, GDT_Int16, 
                 GDT_UInt32, GDT_Int32, GDT_Float32, GDT_Float64, 
                 GDT_CInt16, GDT_CInt32, GDT_CFloat32, GDT_CFloat64)
# OGR string constants supported here, and associated file extensions
OGRFormats = {'CSV': '.csv', 
              'ESRI Shapefile': '.shp'
              }
OGRDataTypes = (wkbPoint, wkbLineString, wkbPolygon, 
                wkbMultiPoint, wkbMultiLineString, wkbMultiPolygon)

OGRNumericTypes = ('OFTBinary', 'OFTInteger', 'OFTReal')

# Mapfile symbolizations
SYMBOL_FILENAME = APP_DIR + '/LmWebServer/public_html/maps/symbols.txt'
DEFAULT_POINT_COLOR = 'ff7f00'
DEFAULT_LINE_COLOR = 'ffffff'
DEFAULT_PROJECTION_PALETTE = 'red'
DEFAULT_ENVIRONMENTAL_PALETTE = 'gray'

# ENM filename info
MODEL_REQUEST_PREFIX = 'modReq'
PROJECTION_REQUEST_PREFIX = 'projReq'
OCC_LAYER_PREFIX = 'pt'

# Web directories
CSS_PATH = 'css'
FUSIONCHARTS_PATH = 'FusionCharts'
HELP_PATH = 'help'
IMAGES_PATH = 'images'
JAVASCRIPT_PATH = 'javascript'
MAP_PATH = 'maps'
LM_MAP_PATH = 'lm2'
MAPSCRIPTS_PATH = 'mapscripts'
DL_PATH = 'dl' # Temporary files for Dianna are stored here
SAMPLES_PATH = 'samples'
SCHEMAS_PATH = 'schemas'
STATIC_PATH = 'static'

LUCENE_PATH = 'lucene'

MODEL_PATH = 'models'
# Depth of path for models/projections - this is the number of levels 
# that the occurrencesetid associated with a model and its projections 
# is split into i.e. occurrencesetid = 123456789 --> path 000/123/456/789/
MODEL_DEPTH = 4

PROJ_FILE_TYPE = "GreyTiff"

# ............................................................................
# FIXME: change this
# LMPublic IP address
#LM_IP = '129.237.201.131'
# Development desktops, debug users, and beta server names
DEBUG_USER_PREFIX = 'debug_'

# MAL, RAD, gbifCache database names
RAD_STORE = 'speco'
MAL_STORE = 'mal'
GBC_STORE = 'gbc20130910'

class ConnectionPort:
   # Compute resources use 6432 port
   PUBLIC = 6432
   # Pipeline is private, connects directly using default port
   PRIVATE = 5432
   
class LMEnvironment:
   PRODUCTION = 1
   BETA = 2
   DEVELOPMENT = 3
   
# ConnectionType: (machine list)
HOSTNAMES = {LMEnvironment.DEVELOPMENT: 
                      { 
                       ConnectionPort.PUBLIC: ('sporks', 'badenov', 'BIDDFWQ3P1'),
                       ConnectionPort.PRIVATE: ()
                       },
             LMEnvironment.BETA: 
                      {
                       ConnectionPort.PUBLIC: ('mercury', 'juno'),
                       ConnectionPort.PRIVATE: ()
                       },
             LMEnvironment.PRODUCTION: 
                      {
                       ConnectionPort.PUBLIC: ('hermes', 'hera'),
                       ConnectionPort.PRIVATE: ()
                       }
             }
#['badenov', 'lm2hydralet', 'sporks', 'BIDDFWQ3P1'] 
LM_OGC_SERVICE_URL = 'http://lifemapper.org/ogc'
DEV_OGC_SERVICE_URL = 'http://badenov.nhm.ku.edu/ogc'
BETA_OGC_SERVICE_URL = 'http://beta.lifemapper.org/ogc'

# SMTP Server for sending email
SMTP_SERVER = "smtp.ku.edu"
SMTP_SENDER = 'lifemapper@ku.edu'

# ......................................................
# For querying GBIF REST service for data
# ......................................................
# seconds to wait before retrying unresponsive services
GBIF_WAIT_TIME = 900 
GBIF_REST_URL = 'http://api.gbif.org/v0.9'
GBIF_USR = 'aimee'
GBIF_KEY = 'pipelines4us'
GBIF_SPECIES_SERVICE = 'species'
GBIF_OCCURRENCE_SERVICE = 'occurrence'
GBIF_DATASET_SERVICE = 'dataset'

GBIF_REQUEST_SIMPLE_QUERY_KEY = 'q'
GBIF_REQUEST_NAME_QUERY_KEY = 'name'
GBIF_REQUEST_TAXON_KEY = 'TAXON_KEY'
GBIF_REQUEST_RANK_KEY = 'rank'
GBIF_REQUEST_DATASET_KEY = 'dataset_key'                

GBIF_DATASET_BACKBONE_VALUE = 'GBIF Backbone Taxonomy'

GBIF_SEARCH_COMMAND = 'search'
GBIF_COUNT_COMMAND = 'count'
GBIF_MATCH_COMMAND = 'match'
GBIF_DOWNLOAD_COMMAND = 'download'
GBIF_DOWNLOAD_REQUEST_COMMAND = 'request'

GBIF_QUERY_PARAMS = {GBIF_SPECIES_SERVICE: {'status': 'ACCEPTED',
                                            GBIF_REQUEST_RANK_KEY: None,
                                            GBIF_REQUEST_DATASET_KEY: None,
                                            GBIF_REQUEST_NAME_QUERY_KEY: None},
                     GBIF_OCCURRENCE_SERVICE: {"GEOREFERENCED": True,
                                               "SPATIAL_ISSUES": False,
#                                                "BASIS_OF_RECORD": ["PRESERVED_SPECIMEN"],
                                               GBIF_REQUEST_TAXON_KEY: None},
                     GBIF_DOWNLOAD_COMMAND: {"creator": "aimee",
                                             "notification_address": ["lifemapper@mailinator.com"]}
                     }
URL_ESCAPES = [ [" ", "%20"] ]


GBIF_RESPONSE_IDENTIFIER_KEY = 'key'
GBIF_RESPONSE_RESULT_KEY = 'results'
GBIF_RESPONSE_END_KEY = 'endOfRecords'
GBIF_RESPONSE_COUNT_KEY = 'count'
GBIF_RESPONSE_GENUS_ID_KEY = 'genusKey'
GBIF_RESPONSE_GENUS_KEY = 'genus'
GBIF_RESPONSE_SPECIES_ID_KEY = 'speciesKey'
GBIF_RESPONSE_SPECIES_KEY = 'species'
GBIF_RESPONSE_MATCH_KEY = 'matchType'
GBIF_RESPONSE_NOMATCH_VALUE = 'NONE'

# For writing files from GBIF DarwinCore download, 
# DWC translations in lmCompute/code/sdm/gbif/constants
# We are adding these 2 fields
LM_WKT_FIELD = 'geomwkt'
GBIF_LINK_FIELD = 'gbifurl'

# 12-23-2013 = 56649
GBIF_EXP_YR = 2013
GBIF_EXP_MO = 12
GBIF_EXP_DY = 23
# GBIF names plus local db names; makes sure all are updated.
NAMEFILE = os.path.join(APP_DIR, PIPELINE_DATA_PATH, 'nubCanonicals_SPECIES.txt')
MARINE_EXCLUDE_FILE = os.path.join(APP_DIR, PIPELINE_DATA_PATH, 'marinelist.txt')

# Last Production Code update with Compute-JobServer direction switch
#  3-6-2013 =  56357
PROD_UPDATE_YR = 2013
PROD_UPDATE_MO = 3
PROD_UPDATE_DY = 6

PROD_WEBSITE_ROOT = "http://lifemapper.org"
DEV_WEBSITE_ROOT = "http://sporks.nhm.ku.edu"
BETA_WEBSITE_ROOT = "http://beta.lifemapper.org"
#DEV_WEBSITE_ROOT = "http://badenov.nhm.ku.edu"
PROD_MAPSERVER_ROOT = "http://lifemapper.org"
DEV_MAPSERVER_ROOT = "http://badenov.nhm.ku.edu"
BETA_MAPSERVER_ROOT = "http://beta.lifemapper.org"
DEFAULT_NETWORK_INTERFACE = "eth0"

DEFAULT_SPECIES = "Flatidae"


try:
   hostname = socket.gethostname().lower()
   IS_DEV = True
   for env in HOSTNAMES.keys():
      for connPort, machines in HOSTNAMES[env].iteritems():
         if hostname in machines:
            ENVIRONMENT = env
            break
      
   if ENVIRONMENT == LMEnvironment.DEVELOPMENT:
      if hostname == 'badenov':
         WEBSITE_ROOT = DEV_MAPSERVER_ROOT
      if hostname == 'BIDDFWQ3P1':
         WEBSITE_ROOT = "http://localhost"
      else:
         WEBSITE_ROOT = DEV_WEBSITE_ROOT
      MAPSERVER_ROOT = DEV_MAPSERVER_ROOT
      
   elif ENVIRONMENT == LMEnvironment.PRODUCTION:
      IS_DEV = False
      WEBSITE_ROOT = PROD_WEBSITE_ROOT
      MAPSERVER_ROOT = PROD_MAPSERVER_ROOT
      
   elif ENVIRONMENT == LMEnvironment.BETA:
      WEBSITE_ROOT = BETA_WEBSITE_ROOT
      MAPSERVER_ROOT = BETA_MAPSERVER_ROOT
      
except Exception, e:
   WEBSITE_ROOT = PROD_WEBSITE_ROOT
   MAPSERVER_ROOT = PROD_MAPSERVER_ROOT

## Values indicating service name (vendor specific parameter 'sdlsvc'
## for W*S urls) for species occurrence sets and projection rasters.
#SPECIES_SERVICENAME = 'pbj'
#PROJECTION_SERVICENAME = 'mal'

MAP_KEY = 'map'
WMS_LAYER_KEY = 'layers'
WCS_LAYER_KEY = 'coverage'
OCC_PREFIX = 'occ_'
RASTER_PREFIX = 'rst_'
VECTOR_PREFIX = 'vct_'
PROJ_PREFIX = 'prj_'

# Scenario matching constants
SCENARIO_CURRENT_KEYWORD = 'measured present day climate'
SCENARIO_FUTURE_KEYWORD = ' predicted model change between current and future applied to measured present climate'

# Map/data service parameters
MAP_TEMPLATE = 'template'
QUERY_TEMPLATE = 'query.html'
BLUE_MARBLE_IMAGE = 'BMNG.geotiff'
QUERY_TOLERANCE = 3
# POINT_SYMBOL and LINE_SYMBOL values are in symbols.txt, referenced in mapfiles
POINT_SYMBOL = 'filledcircle'
LINE_SYMBOL = 'line'
POLYGON_SYMBOL = None
POINT_SIZE = 5
LINE_SIZE = 3
# Outline Width
POLYGON_SIZE = 0.91

DEFAULT_EPSG = 4326
DEFAULT_SRS = 'epsg:4326'
DEFAULT_WCS_FORMAT = 'image/tiff' 
MAXENT_WCS_FORMAT = 'image/x-aaigrid'
DEFAULT_WMS_FORMAT = 'image/png'

# Log parameters
# Log format string, each section is separated by a space
LOG_FORMAT = ' '.join(["%(asctime)s",
                       "%(threadName)s.%(module)s.%(funcName)s",
                       "line",
                       "%(lineno)d",
                       "%(levelname)-8s",
                       "%(message)s"])
# Date format for log dates
LOG_DATE_FORMAT = '%d %b %Y %H:%M'
# Maximum log file size before new log file is started
LOGFILE_MAX_BYTES = 52000000 
# The number of backups to keep.  as the log file approaches MAX_BYTES in size
#    it will be renamed and a new log file will be created.  The renamed file
#    will have the same name with a number appended (.1 - .BACKUP_COUNT).
#    When the maximum number of backups has been met, the oldest will be 
#    discarded.
LOGFILE_BACKUP_COUNT = 5
LOG_EXTENSION = 'log'

DEFAULT_USER = 'lm2'
ALL_USER = 'all'
UNITTEST_USER = 'unittester'
USDA_USER = 'usda'
CT_USER = 'changeThinking'
CT_RASTER = SAN_DATA_DIR + '/ClimateData/Present/worldclim/NA/alt.tif'
DEFAULT_POST_USER = "anon"
ENCODING = "utf-8"
MAX_KML_POINTS = 10000

# ...............................................
# String escapes
#TODO: Complete these lists, they may not include everything they need to
JSON_ESCAPES = [
                ["\n", "\\n"],
                ["\t", "\\t"],
                ["\"", "'"]
               ]

HTML_ESCAPES = [
                ["&", "&amp;"],
                ["\n", "<br />"],
                ["\t", "&nbsp;&nbsp;&nbsp;"],
                ["\"", "&quot;"]
               ]

SQL_ESCAPES = []

XML_ESCAPES = [
               ["&", "&amp;"],
               ["<", "&lt;"],
               [">", "&gt;"],
               ["\"", "&quot;"]
              ]

STRING_ESCAPE_FORMATS = {
                           "html" : HTML_ESCAPES,
                           "json" : JSON_ESCAPES,
                           "sql"  : SQL_ESCAPES,
                           "xml"  : XML_ESCAPES
                        }

# ...............................................
LUCENE_STOP_WORDS = ["a", "about", "above", "across", "after", "afterwards", 
                     "again", "against", "all", "almost", "alone", "along", 
                     "already", "also", "although", "always", "am", "among", 
                     "amongst", "amoungst", "amount", "an", "and", "another", 
                     "any", "anyhow", "anyone", "anything", "anyway", 
                     "anywhere", "are", "around", "as", "at", "back", "be", 
                     "became", "because", "become", "becomes", "becoming", 
                     "been", "before", "beforehand", "behind", "being", 
                     "below", "beside", "besides", "between", "beyond", 
                     "bill", "both", "bottom", "but", "by", "call", "can", 
                     "cannot", "cant", "co", "computer", "con", "could", 
                     "couldn't", "cry", "de", "describe", "detail", "do", 
                     "done", "down", "due", "during", "each", "eg", "eight", 
                     "either", "eleven", "else", "elsewhere", "empty", 
                     "enough", "etc", "even", "ever", "every", "everyone", 
                     "everything", "everywhere", "except", "few", "fifteen", 
                     "fify", "fill", "find", "fire", "first", "five", "for", 
                     "former", "formerly", "forty", "found", "four", "from", 
                     "front", "full", "further", "get", "give", "go", "had", 
                     "has", "hasnt", "have", "he", "hence", "her", "here", 
                     "hereafter", "hereby", "herein", "hereupon", "hers", 
                     "herself", "him", "himself", "his", "how", "however", 
                     "hundred", "i", "ie", "if", "in", "inc", "indeed", 
                     "interest", "into", "is", "it", "its", "itself", "keep", 
                     "last", "latter", "latterly", "least", "less", "ltd", 
                     "made", "many", "may", "me", "meanwhile", "might", "mill", 
                     "mine", "more", "moreover", "most", "mostly", "move", 
                     "much", "must", "my", "myself", "name", "namely", 
                     "neither", "never", "nevertheless", "next", "nine", "no", 
                     "nobody", "none", "noone", "nor", "not", "nothing", "now", 
                     "nowhere", "of", "off", "often", "on", "once", "one", 
                     "only", "onto", "or", "other", "others", "otherwise", 
                     "our", "ours", "ourselves", "out", "over", "own", "part", 
                     "per", "perhaps", "please", "put", "rather", "re", "same", 
                     "see", "seem", "seemed", "seeming", "seems", "serious", 
                     "several", "she", "should", "show", "side", "since", 
                     "sincere", "six", "sixty", "so", "some", "somehow", 
                     "someone", "something", "sometime", "sometimes", 
                     "somewhere", "still", "such", "system", "take", "ten", 
                     "than", "that", "the", "their", "them", "themselves", 
                     "then", "thence", "there", "thereafter", "thereby", 
                     "therefore", "therein", "thereupon", "these", "they", 
                     "thick", "thin", "third", "this", "those", "though", 
                     "three", "through", "throughout", "thru", "thus", "to", 
                     "together", "too", "top", "toward", "towards", "twelve", 
                     "twenty", "two", "un", "under", "until", "up", "upon", 
                     "us", "very", "via", "was", "we", "well", "were", "what", 
                     "whatever", "when", "whence", "whenever", "where", 
                     "whereafter", "whereas", "whereby", "wherein", 
                     "whereupon", "wherever", "whether", "which", "while", 
                     "whither", "who", "whoever", "whole", "whom", "whose", 
                     "why", "will", "with", "within", "without", "would", 
                     "yet", "you", "your", "yours", "yourself", "yourselves" ]

# ...............................................

BIOCLIM_PARAMETERS = {
                  'name': 'Bioclimatic Envelope Algorithm',
                  # output is 0, 0.5, 1.0
                  'isDiscreteOutput': True,
                  'outputFormat': 'GTiff',
                  'acceptsCategoricalMaps': False,
                  'parameters' : 
   {'StandardDeviationCutoff': 
   {'type': FloatType,
    'min': 0.0, 'default': 0.674, 'max': None } 
   } }
 
CSMBS_PARAMETERS = {'name': 'Climate Space Model - Broken-Stick Implementation',
                # TODO: discrete output?
                'isDiscreteOutput': False,
                'outputFormat': 'GTiff',
                'acceptsCategoricalMaps': False,
                'parameters' : 
   {
 'Randomisations': 
   {'type': IntType,
    'min': 1, 'default': 8, 'max': 1000 }
 ,
 'StandardDeviations':
   {'type': FloatType,
    'min': -10.0, 'default': 2.0, 'max': 10.0 } 
 ,
 'MinComponents': 
   {'type': IntType,
    'min': 1, 'default': 1, 'max': 20 }
 ,
 'VerboseDebugging': 
   {'type': IntType,
    'min': 0, 'default': 0, 'max': 1 }
   } }
ENVDIST_PARAMETERS = {'name': 'Environmental Distance',
                  # TODO: output is??
                  'isDiscreteOutput': False,
                  'outputFormat': 'GTiff',
                  'acceptsCategoricalMaps': False,
                  'parameters': 
   {
 'DistanceType':
   {'type': IntType,
    'min': 1, 'default': 1, 'max': 4 }
   ,
   'NearestPoints':
   {'type': IntType,
    'min': 0, 'default': 1, 'max': None }
 ,
 'MaxDistance':
   {'type': FloatType,
    'min': 0.1, 'default': 0.1, 'max': 1.0 }
   } }
 
ENVSCORE_PARAMETERS = {'name': 'Envelope Score',
                   # probability between 0.0 and 1.0
                   'isDiscreteOutput': False,
                   'outputFormat': 'GTiff',
                   'acceptsCategoricalMaps': False,
                   'parameters': { } }
 
GARP_PARAMETERS =  {'name': 'GARP (single run) - new openModeller implementation',
                'isDiscreteOutput': True,
                'outputFormat': 'GTiff',
                'acceptsCategoricalMaps': False,
                'parameters': {
 'MaxGenerations':
 {'type': IntType,
  'min': 1, 'default': 400, 'max': None }
 ,
 'ConvergenceLimit':
 {'type': FloatType,
  'min': 0.0, 'default': 0.01, 'max': 1.0 }
 ,
 'PopulationSize':
 {'type': IntType,
  'min': 1, 'default': 50, 'max': 500 }
 ,
 'Resamples':
 {'type': IntType,
  'min': 1, 'default': 2500, 'max': 100000 }
 } }
 
GARP_BS_PARAMETERS = {'name': 'GARP with Best Subsets - new openModeller implementation ',
                  'isDiscreteOutput': False,
                  'outputFormat': 'GTiff',
                  'acceptsCategoricalMaps': False,
                  'parameters': 
   {
 'TrainingProportion': 
    {'type': FloatType,
     'min': 0, 'default': 50, 'max': 100 }
    ,
    'TotalRuns': 
    {'type': IntType,
     'min': 0, 'default': 20, 'max': 10000 }
    ,
    'HardOmissionThreshold': 
    {'type': FloatType,
     'min': 0, 'default': 100, 'max': 100 }
    ,
    'ModelsUnderOmissionThreshold': 
    {'type': IntType,
     'min': 0, 'default': 20, 'max': 10000 }
    ,
    'CommissionThreshold': 
    {'type': FloatType,
     'min': 0, 'default': 50, 'max': 100 }
    ,
    'CommissionSampleSize': 
    {'type': IntType,
     'min': 1, 'default': 10000, 'max': None }
    ,
    'MaxThreads': 
    {'type': IntType,
     'min': 1, 'default': 1, 'max': 1024 }
    ,
    'MaxGenerations': 
    {'type': IntType,
     'min': 1, 'default': 400, 'max': None }
    ,
    'ConvergenceLimit': 
    {'type': FloatType,
     'min': 0.0, 'default': 0.1, 'max': 1.0 }
    ,
    'PopulationSize': 
    {'type': IntType,
     'min': 1, 'default': 50, 'max': 500 }
    ,
    'Resamples': 
    {'type': IntType,
     'min': 1, 'default': 2500, 'max': 10000 }
    } }
 
DG_GARP_PARAMETERS =  {'name': 'GARP (single run) - DesktopGARP implementation',
                   'isDiscreteOutput': True,
                   'outputFormat': 'GTiff',
                   'acceptsCategoricalMaps': False,
                   'parameters': GARP_PARAMETERS['parameters']}
 
 
DG_GARP_BS_PARAMETERS = {'name': 'GARP (single run) - DesktopGARP implementation',
                     'isDiscreteOutput': False,
                     'outputFormat': 'GTiff',
                     'acceptsCategoricalMaps': False,
                     'parameters': GARP_BS_PARAMETERS['parameters']}
 
ATT_MAXENT_PARAMETERS = {
      "name" : "Maximum Entropy (ATT Implementation)",
      'isDiscreteOutput' : False,
      'outputFormat': 'GTiff',
      'acceptsCategoricalMaps' : True,
      'parameters' :
      {
       'responsecurves': 
          {'type': IntType, 'min' : 0, 'max' : 1, 'default' : 0},
       'pictures': 
          {'type' : IntType, 'min' : 0, 'max' : 1, 'default' : 1},
       'jackknife': 
          {'type' : IntType, 'min' : 0, 'max' : 1, 'default' : 0},
       'outputformat': # 0 - raw, 1 - logistic, 2 - cumulative
          {'type' : IntType, 'min' : 0, 'max' : 2, 'default' : 1},
       'randomseed': 
          {'type' : IntType, 'min' : 0, 'max' : 1, 'default' : 0},
       'logscale': 
          {'type' : IntType, 'min' : 0, 'max' : 1, 'default' : 1},
       'removeduplicates': 
          {'type' : IntType, 'min' : 0, 'max' : 1, 'default' : 1},
       'writeclampgrid': 
          {'type' : IntType, 'min' : 0, 'max' : 1, 'default' : 1},
       'writemess':
          {'type' : IntType, 'min' : 0, 'max' : 1, 'default' : 1},
       'randomtestpoints':
          {'type' : IntType, 'min' : 0, 'max' : 100, 'default' : 0},
       'betamultiplier':
          {'type' : FloatType, 'min' : 0, 'max' : None, 'default' : 1.0},
       'maximumbackground':
          {'type' : IntType, 'min' : 0, 'max' : None, 'default' : 10000},
       'replicates':
          {'type' : IntType, 'min' : 1, 'max' : None, 'default' : 1},
       'replicatetype': # 0 - cross validate, 1 - bootstrap, 2 - subsample
          {'type' : IntType, 'min' : 0, 'max' : 2, 'default' : 0},
       'perspeciesresults':
          {'type' : IntType, 'min' : 0, 'max' : 1, 'default' : 0},
       'writebackgroundpredictions':
          {'type' : IntType, 'min' : 0, 'max' : 1, 'default' : 0},
       'responsecurvesexponent':
          {'type' : IntType, 'min' : 0, 'max' : 1, 'default' : 0},
       'linear':
          {'type' : IntType, 'min' : 0, 'max' : 1, 'default' : 1},
       'quadratic':
          {'type' : IntType, 'min' : 0, 'max' : 1, 'default' : 1},
       'product':
          {'type' : IntType, 'min' : 0, 'max' : 1, 'default' : 1},
       'threshold':
          {'type' : IntType, 'min' : 0, 'max' : 1, 'default' : 1},
       'hinge':
          {'type' : IntType, 'min' : 0, 'max' : 1, 'default' : 1},
       'writeplotdata':
          {'type' : IntType, 'min' : 0, 'max' : 1, 'default' : 0},
       'fadebyclamping':
          {'type' : IntType, 'min' : 0, 'max' : 1, 'default' : 0},
       'extrapolate':
          {'type' : IntType, 'min' : 0, 'max' : 1, 'default' : 1},
       'autofeature':
          {'type' : IntType, 'min' : 0, 'max' : 1, 'default' : 1},
       'doclamp':
          {'type' : IntType, 'min' : 0, 'max' : 1, 'default' : 1},
       'outputgrids':
          {'type' : IntType, 'min' : 0, 'max' : 1, 'default' : 1},
       'plots':
          {'type' : IntType, 'min' : 0, 'max' : 1, 'default' : 1},
       'appendtoresultsfile':
          {'type' : IntType, 'min' : 0, 'max' : 1, 'default' : 0},
       'maximumiterations':
          {'type' : IntType, 'min' : 0, 'max' : None, 'default' : 500},
       'convergencethreshold':
          {'type' : FloatType, 'min' : 0, 'max' : None, 'default' : 0.00001},
       'adjustsampleradius':
          {'type' : IntType, 'min' : 0, 'max' : None, 'default' : 0},
       'lq2lqptthreshold':
          {'type' : IntType, 'min' : 0, 'max' : None, 'default' : 80},
       'l2lqthreshold':
          {'type' : IntType, 'min' : 0, 'max' : None, 'default' : 10},
       'hingethreshold':
          {'type' : IntType, 'min' : 0, 'max' : None, 'default' : 15},
       'beta_threshold':
          {'type' : FloatType, 'min' : None, 'max' : None, 'default' : -1.0},
       'beta_categorical':
          {'type' : FloatType, 'min' : None,'max' : None, 'default' : -1.0},
       'beta_lqp':
          {'type' : FloatType, 'min' : None, 'max' : None, 'default' : -1.0},
       'beta_hinge':
          {'type' : FloatType, 'min' : None, 'max' : None, 'default' : -1.0},
       'defaultprevalence':
          {'type' : FloatType, 'min' : 0.0, 'max' : 1.0, 'default' : 0.5}
      }
   }
 
OM_MAXENT_PARAMETERS = {'name': 'Maximum Entropy (openModeller Implementation)',
                 'isDiscreteOutput': False,
                 'outputFormat': 'GTiff',
                 'acceptsCategoricalMaps': False,
                 'parameters': 
   {
    "NumberOfBackgroundPoints":
    {
     'type' : IntType,
     'min': 0,
     'default': 10000,
     'max': 10000
    },
    'UseAbsencesAsBackground':
    {
     'min': 0,
     'max': 1,
     'type': IntType,
     'default': 0
    },
    "IncludePresencePointsInBackground":
    {
     'min': 0,
     'max': 1,
     'type': IntType,
     'default': 1
    },
    "NumberOfIterations":
    {
     'min': 1,
     'max': None,
     'type': IntType,
     'default': 500
    },
    "TerminateTolerance":
    {
     'min': 0,
     'max': None,
     'type': FloatType,
     'default': 0.00001
    },
    "OutputFormat":
    {
     'min': 1,
     'max': 2,
     'type': IntType,
     'default': 2
    },
    "QuadraticFeatures":
    {
     'min': 0,
     'max': 1,
     'type': IntType,
     'default': 1
    },
    "ProductFeatures":
    {
     'min': 0,
     'max': 1,
     'type': IntType,
     'default': 1
    },
    "HingeFeatures":
    {
     'min': 0,
     'max': 1,
     'type': IntType,
     'default': 1
    },
    "ThresholdFeatures":
    {
     'min': 0,
     'max': 1,
     'type': IntType,
     'default': 1
    },
    "AutoFeatures":
    {
     'min': 0,
     'max': 1,
     'type': IntType,
     'default': 1
    },
    "MinSamplesForProductThreshold":
    {
     'min': 1,
     'max': None,
     'type': IntType,
     'default': 80
    },
    "MinSamplesForQuadratic":
    {
     'min': 1,
     'max': None,
     'type': IntType,
     'default': 10
    },
    "MinSamplesForHinge":
    {
     'min': 1,
     'max': None,
     'type': IntType,
     'default': 15
    }
    } }
 
SVM_PARAMETERS = {'name': 'SVM (Support Vector Machines)',
              'isDiscreteOutput': False,
              'outputFormat': 'GTiff',
              'acceptsCategoricalMaps': False,
              'parameters': 
   {
    'svmtype':
    {'type': IntType,
     'min': 0, 'default': 0, 'max': 2 }
    ,
    'KernelType':
    {'type': IntType,
     'min': 0, 'default': 2, 'max': 4 }
    ,
    'Degree':
    {'type': IntType,
     'min': 0, 'default': 3, 'max': None }
    ,
    'Gamma':
    {'type': FloatType,
     'min': None, 'default': 0.0, 'max': None }
    ,
    'Coef0':
    {'type': FloatType,
     'min': None, 'default': 0.0, 'max': None }
    ,
    'Cost':
    {'type': FloatType,
     'min': 0.001, 'default': 1.0, 'max': None }
    ,
    'Nu':
    {'type': FloatType, 
     'min': 0.001, 'default': 0.5, 'max': 1 }
    ,
    'ProbabilisticOutput':
    {'type': IntType,
     'min': 0, 'default': 1, 'max': 1 }
    ,
    'NumberOfPseudoAbsences':
    {'type': IntType,
     'min': 0, 'default': 0, 'max': None }
    } }
 
ANN_PARAMETERS = {'name': 'Artificial Neural Network',
              # TODO: discrete output?
              'isDiscreteOutput': False,
              'outputFormat': 'GTiff',
              'acceptsCategoricalMaps': False,
              'parameters': {
    'HiddenLayerNeurons':
    {'type': IntType,
     'min': 0, 'default': 8, 'max': None }
    ,
    'LearningRate':
    {'type': FloatType,
     'min': 0.0, 'default': 0.3, 'max': 1.0 }
    ,
    'Momentum':
    {'type': FloatType,
     'min': 0.0, 'default': 0.05, 'max': 1.0 }
    ,
    'Choice':
    {'type': IntType,
     'min': 0, 'default': 0, 'max': 1 }
    ,
    'Epoch':
    {'type': IntType,
     'min': 1, 'default': 100000, 'max': None }
    ,
    'MinimumError':
    {'type': FloatType,
     'min': 0.0, 'default': 0.01, 'max': 0.05 }
    } }
 
# TODO: Implement this!
ENFA_PARAMETERS = {'name': 'Ecological-Niche Factor Analysis',
               'isDiscreteOutput': None,
               'outputFormat': 'GTiff',
               'acceptsCategoricalMaps': False,
               'parameters': 
               {}
} 
 
# TODO: Implement this!
RNDFOREST_PARAMETERS = {'name': 'Random Forests',
               'isDiscreteOutput': None,
               'outputFormat': 'GTiff',
               'acceptsCategoricalMaps': False,
               'parameters': 
               {}
} 
 
AQUAMAPS_PARAMETERS = {'name': 'AquaMaps (beta version) ',
                   'isDiscreteOutput': False,
                   'outputFormat': 'GTiff',
                   'acceptsCategoricalMaps': False,
                   'parameters': 
   {'UseSurfaceLayers':
    {'type': IntType,
     'min': -1, 'default': -1, 'max': 1 }
    ,
    'UseDepthRange':
    {'type': IntType,
     'min': 0,  'default': 1, 'max': 1 }
    ,
    'UseIceConcentration':
    {'type': IntType,
     'min': 0, 'default': 1, 'max': 1 }
    ,
    'UseDistanceToLand':
    {'type': IntType,
     'min': 0, 'default': 1, 'max': 1 }
    ,
    'UsePrimaryProduction':
    {'type': IntType,
     'min': 0, 'default': 1, 'max': 1 }
    ,
    'usesalinity':
    {'type': IntType,
     'min': 0, 'default': 1, 'max': 1 }
    ,
    'usetemperature':
    {'type': IntType,
     'min': 0, 'default': 1, 'max': 1 }
    } }

ALGORITHM_DATA  = {
'BIOCLIM': BIOCLIM_PARAMETERS,
'CSMBS': CSMBS_PARAMETERS,
'ENVDIST': ENVDIST_PARAMETERS,
'ENVSCORE': ENVSCORE_PARAMETERS,
'DG_GARP': DG_GARP_PARAMETERS,
'GARP': GARP_PARAMETERS,
'DG_GARP_BS': DG_GARP_BS_PARAMETERS,
'GARP_BS': GARP_BS_PARAMETERS,
'MAXENT': OM_MAXENT_PARAMETERS,
'ATT_MAXENT': ATT_MAXENT_PARAMETERS,
'SVM': SVM_PARAMETERS,
'ANN': ANN_PARAMETERS,
'AQUAMAPS': AQUAMAPS_PARAMETERS,
# Not yet implemented
'ENFA': ENFA_PARAMETERS, 
'RNDFOREST': RNDFOREST_PARAMETERS
}

# .............................................................................
class FeatureNames:
   """
   @summary: Shapefile feature names
   """
   SITE_ID = 'siteid'
   SITE_X = 'centerX'
   SITE_Y = 'centerY'
   CANONICAL_NAME = "canname"
   CATALOG_NUMBER = "catnum"
   COLLECTION_CODE = "collcode"
   COLLECTION_DATE = "colldate"
   COLLECTOR = "collectr"
   GBIF_LATITUDE = "lat"
   GBIF_LONGITUDE = "lon"
   GEOMETRY_WKT = "geomwkt"
   INSTITUTION_CODE = "instcode"
   LOCAL_ID = "localid"
   MODIFICATION_DATE = "moddate"
   NAME_KEY = "nmkey"
   OCCURRENCE_KEY = "occkey"
   PROVIDER_KEY = "provkey"
   PROVIDER_NAME = "provname"
   RESOURCE_KEY = "reskey"
   RESOURCE_NAME = "resname"
   URL = "url"
   USER_LATITUDE = "latitude"
   USER_LONGITUDE = "longitude"

LIFEMAPPER_IPS = [
                  "129.237.201.247", # Cluster
                  "129.237.201.67", # CJ's machine
                  "129.237.201.119", # Aimee's machine
                  "129.237.201.35",
                  "198.202.88.204" # SDSC cluster (rocks-204)
                 ]
