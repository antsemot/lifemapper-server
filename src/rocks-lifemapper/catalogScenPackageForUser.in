#!/bin/bash 

# Purpose: define a BOOM archive and populate the database with input metadata
#
# This script is run by a superuser

SCEN_PKG=$1
USR=$2

usage () 
{
    echo "Usage: $0 <SCEN_PACKAGE_NAME>  <USER_ID>  [USER_EMAIL]"
    echo "This script is run by the superuser. It will "
    echo "     - run catalogScenPkg.py to populate the databases with "
    echo "       Scenario Package data for a User"
    echo "If no arguments are supplied, SCENARIO_PACKAGE and ARCHIVE_USER "
    echo "will be read from the user config file (config.site.ini) or installed "
    echo "config file (config.lmserver.ini) in @LMHOME@/config/"
    echo "   "
    echo "The output of the script is in @LMSCRATCHDISK@/log/`/bin/basename $0`.log"
}

### define varibles
SetDefaults () {
    THISNAME=`/bin/basename $0`    
    LOG=@LMSCRATCHDISK@/log/$THISNAME.log
    rm -f $LOG
    touch $LOG
    
    SCEN_PKG=$1
    USR=$2
    EMAIL=$3
    
    # config files
    CONFIG_FILE=@LMHOME@/config/config.lmserver.ini
    SITE_CONFIG_FILE=@LMHOME@/config/config.site.ini


    if [[ ! "$SCEN_PKG" || ! "$USR" ]] ; then
	    if [ ! "$SCEN_PKG" ] ; then
	        # look in config.site.ini
	        if [ -f $SITE_CONFIG_FILE ] ; then        
	            echo "Looking for SCENARIO_PACKAGE in site config file"   | tee -a $LOG  
	            SCEN_PKG=`grep -i SCENARIO_PACKAGE $SITE_CONFIG_FILE | grep -v ';' | awk '{print $2}'`
	        fi
	        
	        # look in installed config file        
	        if [ ! "$SCEN_PKG" ] ; then 
	            echo "Looking for SCENARIO_PACKAGE in installed config file"   | tee -a $LOG  
	            SCEN_PKG=`grep -i SCENARIO_PACKAGE $CONFIG_FILE | grep -v ';' | awk '{print $2}'`
	        fi
	    fi
    
	    if [ ! "$USR" ] ; then 
	        # look in config.site.ini
	        if [ -f $SITE_CONFIG_FILE ] ; then        
	            echo "Looking for ARCHIVE_USER in site config file"   | tee -a $LOG  
	            USR=`grep -i ARCHIVE_USER $SITE_CONFIG_FILE | grep -v _EMAIL | grep -v ';' | awk '{print $2}'`
	        fi
	        
	        # look in installed config file        
	        if [ ! "$USR" ] ; then 
	            echo "Looking for ARCHIVE_USER in installed config file"   | tee -a $LOG  
	            USR=`grep -i ARCHIVE_USER $CONFIG_FILE | grep -v _EMAIL | grep -v ';' | awk '{print $2}'`
	        fi
	    fi
	fi
    
    if [ -z ${USR} ] ; then
        echo "Error: Missing argument or configured value for ARCHIVE_USER" | tee -a $LOG
        exit 1
    fi
    if [ -z ${SCEN_PKG} ] ; then
        echo "Error: Missing argument or configured value for SCENARIO_PACKAGE" | tee -a $LOG
        exit 1
    fi


    TEMP_DIR=@LMSCRATCHDISK@/temp
    SCEN_DIR=@DATADIR_SHARED@/@ENV_DATA_DIR@

    # SCEN_PKG variable is the file basename, no path or file extension
    SCEN_META_FILE=$SCEN_DIR/$SCEN_PKG.py

    # script
    CATALOG_SCEN_PY=@LMHOME@/LmDbServer/tools/catalogScenPkg.py
}

TimeStamp () {
    echo $1 `/bin/date` >> $LOG
}

### populate lifemapper DB with Scenario Package metadata 
CatalogEnvData () {
    if [ -f $CATALOG_SCEN_PY ] ; then
        echo "Cataloging $SCEN_PKG for $SCEN_USER ..." | tee -a $LOG
        if [ $# -eq 3 ]; then
            /opt/python/bin/@PYTHONVER@ $CATALOG_SCEN_PY \
                                         --scen_package_meta $SCEN_PKG \
                                         --user_id $USR \
                                         --user_email $EMAIL \
                                         2>&1 | tee -a $LOG
        else
            /opt/python/bin/@PYTHONVER@ $CATALOG_SCEN_PY \
                                         --scen_package_meta $SCEN_PKG \
                                         --user_id $USR \
                                         2>&1 | tee -a $LOG
        fi 
    else
        echo "Error: Missing file $CATALOG_SCEN_PY" | tee -a $LOG
        exit 1
    fi
}


### Main ###
# Need 2 or 3 args
if [[ $# -gt 3  ||  $# -lt 2 ]]; then
    usage
    exit 0
fi 

SetDefaults $1 $2 $3
TimeStamp "# Start"
CatalogEnvData
TimeStamp "# End"
