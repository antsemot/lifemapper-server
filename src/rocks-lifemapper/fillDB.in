#!/bin/bash 

# Purpose: define and populate lifemapper pipeline
#
# This script is run by a superuser

usage () 
{
    echo "Usage: $0"
    echo "This script is run by the superuser. It will "
    echo "     - run initCatalog.py to populate the databases and init taxonomy"
    echo "     - run readTaxonomy.py to add taxonomy"
    echo "     - run registerCompute.py to register a compute node"
    echo "   "
    echo "The output of the script is in /tmp/`/bin/basename $0`.log"
}

### define varibles
SetDefaults () {
    # scripts
    POPULATEPY=@LMHOME@/LmDbServer/tools/initCatalog.py
    TAXONOMYPY=@LMHOME@/LmDbServer/tools/readTaxonomy.py
    COMPUTEPY=@LMHOME@/LmDbServer/tools/registerCompute.py

    # TODO: call this once testing is complete and DB is created
    BORG_POPULATEPY=@LMHOME@/LmDbServer/tools/initBorg.py

	 # config files
    CONFIG_FILE=@LMHOME@/config/config.lmserver.ini
    SITE_CONFIG_FILE=@LMHOME@/config/site.ini
    
    # get the DATASOURCE  and ARCHIVE_USER values 
    # from site.ini or config.lmserver.ini file
    echo "Looking for DATASOURCE"   | tee -a $LOG  
    DATASOURCE=`grep DATASOURCE $SITE_CONFIG_FILE | grep -v ';' | awk '{print $2}'`
    if [ ! "$DATASOURCE" ] ; then 
        DATASOURCE=`grep DATASOURCE $CONFIG_FILE | grep -v ';' | awk '{print $2}'`
    fi
    
    echo "Looking for $ARCHIVE_USER"   | tee -a $LOG  
    ARCHIVE_USER=`grep ARCHIVE_USER $SITE_CONFIG_FILE | grep -v ';' | awk '{print $2}'`
    if [ ! "$ARCHIVE_USER" ] ; then 
        ARCHIVE_USER=`grep ARCHIVE_USER $CONFIG_FILE | grep -v ';' | awk '{print $2}'`
    fi
    ARCHIVE_USER_DATA_DIR=@DATADIR_SERVER@/archive/$ARCHIVE_USER
    if [ ! -d $ARCHIVE_USER_DATA_DIR ] ; then
       IS_NEW_USER_DIR=true
    else
       IS_NEW_USER_DIR=false
    fi
    
    LOG=/tmp/`/bin/basename $0`.log
    rm -f $LOG
    touch $LOG
}

TimeStamp () {
    echo $1 `/bin/date` >> $LOG
}

### populate lifemapper DB
Populate () {
    if [ -f $POPULATEPY ] ; then
        echo "Running '$POPULATEPY all'..." | tee -a $LOG
        /opt/python/bin/@PYTHONVER@ $POPULATEPY -m all 2>&1 | tee -a $LOG
    else
        echo "Error: Missing file $POPULATEPY" | tee -a $LOG
        exit 1
    fi
}

FixPermissions () {
    /bin/egrep -i "^lmwriter" /etc/passwd
    if [ $? -ne 0 ]; then
        echo "Error: user lmwriter does not exist" | tee -a $LOG
        exit 1
    fi

    # This script is run by root, so set group write permission on new data dir
    echo "Create and set group write permission on new $ARCHIVE_USER data dir"   | tee -a $LOG
    if [ $IS_NEW_USER_DIR ] ; then
       echo "Update lmwriter group permissions on $ARCHIVE_USER_DATA_DIR" | tee -a $LOG
       /bin/chown -R lmwriter:lmwriter $ARCHIVE_USER_DATA_DIR
       /bin/chmod -R g+ws $ARCHIVE_USER_DATA_DIR
    fi
}

### read and populate taxonomy table
AddTaxonomy () {
    if [ $DATASOURCE = "GBIF" ] ; then
        echo "Running $TAXONOMYPY ..." | tee -a $LOG
        /opt/python/bin/@PYTHONVER@ $TAXONOMYPY 2>&1 | tee -a $LOG
    else
        echo "Notice: DATASOURCE=$DATASOURCE: No taxonomy to ingest" | tee -a $LOG
        return 
    fi
}

### register LmCompute instance
RegisterCompute () {
    if [ -f $COMPUTEPY ] ; then
        echo "Running $COMPUTEPY ..." | tee -a $LOG
        /opt/python/bin/@PYTHONVER@ $COMPUTEPY 2>&1 | tee -a $LOG
    else
        echo "Error: Missing file $COMPUTEPY" | tee -a $LOG
        return
    fi
}

### Main ###
if [ $# -ne 0 ]; then
    usage
    exit 0
fi 

SetDefaults
TimeStamp "# Start"
Populate
FixPermissions
RegisterCompute
TimeStamp "# End"
