#!/bin/bash

### init postgres db and create new configuration ###

PG=`basename /etc/init.d/postgresql-*`
LOG=/tmp/lifemapper-firstboot.log
touch $LOG

# stop services if running
echo "Stop $PG and pgbouncer" >> $LOG
if [ -f /var/run/pgbouncer/pgbouncer.pid ]; then
    /sbin/service pgbouncer stop >> $LOG
fi

if [ -f /var/run/$PG.pid ] ; then
    /sbin/service $PG stop >> $LOG
fi

# initdb creates postgres data/*
echo "Running postgres initdb" >> $LOG
# this option will not work via "service"
# OPT="-E 'UTF-8' --lc-collate='en_US.UTF-8' --lc-ctype='en_US.UTF-8'"
# OPT needs testing
OPT="en_US.UTF-8"
/sbin/service $PG initdb $OPT  >> $LOG

# start postgres with default config
echo "Running postgresql start" >> $LOG
/sbin/service $PG start >> $LOG
/bin/sleep 15

# create lifemapper db users
echo "Running confUsers" >> $LOG
/opt/lifemapper/rocks/bin/confUsers >> $LOG

# init postgres db with user/postgis info
echo "Creating roles and postgis tables with confUsers" >> $LOG
/opt/lifemapper/rocks/bin/db_init >> $LOG  2>&1

# create postgres config file 
echo "Creating postgres config file with confPostgres " >> $LOG
/opt/lifemapper/rocks/bin/confPostgres pg >> $LOG

# create md5 auth client info in config file
echo "Creating postgres auth file with confPostgres" >> $LOG
/opt/lifemapper/rocks/bin/confPostgres ca >> $LOG

### restart services with new configuration ###

# need to update openssl for postgres
echo "Yum update openssl" >> $LOG
/usr/bin/yum --enablerepo base update openssl >> $LOG 

# set unix socket dir
echo "Update unix socket info for psql " >> $LOG
export PGHOST=/var/run/postgresql
PROFILE=/var/lib/pgsql/.bash_profile
if [ ! -f $PROFILE ] ; then
    touch $PROFILE
    chown postgres:postgres $PROFILE
fi
echo "export PGHOST=/var/run/postgresql" >> $PROFILE

# restart postgres with updated configuration
echo "Restart postgres " >> $LOG
/sbin/service $PG restart >> $LOG

# create new pgbouncer config file 
echo "Creating pgbouncer config file " >> $LOG
/opt/lifemapper/rocks/bin/confPgbouncer >> $LOG

# start pgbouncer
echo "Start pgbouncer " >> $LOG
/sbin/service pgbouncer start >> $LOG

