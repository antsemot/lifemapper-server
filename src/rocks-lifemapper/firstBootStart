#!/bin/bash

### init postgres db and create new configuration ###

PG=`basename /etc/init.d/postgresql-*`
LOG=/tmp/lifemapper-firstboot.log
touch $LOG

# initdb creates postgres data/*
echo "Running $PG initdb" >> $LOG
/sbin/service $PG initdb  >> $LOG

# start postgres with default config
echo "Running postgresql start" >> $LOG
/sbin/service $PG start >> $LOG
/bin/sleep 15

# create lifemapper db users
echo "Running confUsers" >> $LOG
/opt/lifemapper/rocks/bin/confUsers >> $LOG

# init postgres db with user/postgis info
echo "Creating roles and postgis tables" >> $LOG
/opt/lifemapper/rocks/bin/db_init >> $LOG  2>&1

# create postgres config file 
echo "Creating postgres config file " >> $LOG
/opt/lifemapper/rocks/bin/confPostgres pg >> $LOG

# create md5 auth client info in config file
echo "Creating postgres auth file " >> $LOG
/opt/lifemapper/rocks/bin/confPostgres ca >> $LOG

### restart services with new configuration ###

# need to update openssl for postgres
/usr/bin/yum --enablerepo base update openssl >> $LOG 

# set unix socket dir
export PGHOST=/var/run/postgresql
echo "PGHOST=/var/run/postgresql" >> /var/lib/pgsql/.bash_profile
echo "export PGHOST" >> /var/lib/pgsql/.bash_profile

# restart postgres with updated configuration
echo "Restart postgres " >> $LOG
/sbin/service $PG restart >> $LOG

# create new pgbouncer config file 
echo "RCreating pgbouncer config file " >> $LOG
/opt/lifemapper/rocks/bin/confPgbouncer >> $LOG

# start pgbouncer
echo "Start pgbouncer " >> $LOG
/sbin/service pgbouncer restart >> $LOG

