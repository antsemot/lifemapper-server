#!/bin/bash 

# Purpose: define and populate lifemapper pipeline
#
# This scirpt is run by a superuser, it reads the @PKGROOT@/rocks/etc/users file
# to get the password for the "admin" DB user and runs psql to execute all the sql scripts

usage () 
{
    echo "Usage: $0"
    echo "This script is run by the superuser. It will "
    echo "     - run runAllSQLScripts.sql to define the databases "
    echo "     - run initCatalog.py to populate the databases and init taxonomy"
    echo "     - run readTaxonomy.py to add taxonomy"
    echo "   "
    echo "The output of the script is in /tmp/`/bin/basename $0`.log"
}

SetPermissions () {
   /bin/egrep -i "^lmwriter" /etc/passwd
   if [ $? -eq 0 ]; then
       echo "Update group permissions for lmwriter on @LMHOME@" | tee -a $LOG
       for item in "config" "Lm*" "__init__.py*" ; do
           /bin/chgrp -R lmwriter @LMHOME@/$item
           /bin/chmod -R g+ws @LMHOME@/$item
       done
   else
        echo "Error: user lmwriter does not exist" | tee -a $LOG
        exit 1
   fi

}

### define varibles
SetDefaults () {
    # db user
    USER=admin
    # file to get password from
    USERSFILE=@PKGROOT@/rocks/etc/users
    DEFINESQL=@LMHOME@/LmDbServer/dbsetup/runAllSQLScripts.sql
    POPULATEPY=@LMHOME@/LmDbServer/populate/initCatalog.py
    TAXONOMYPY=@LMHOME@/LmDbServer/populate/@DATASOURCE@/readTaxonomy.py
    COMPUTEPY=@LMHOME@/LmDbServer/populate/registerCompute.py

    LOG=/tmp/`/bin/basename $0`.log
    touch $LOG
    TimeStamp "# Start"
}

TimeStamp () {
    echo $1 `/bin/date` >> $LOG
}

### sets the password for db "admin" user to execute sql commands
SetPass () {

    # check if users file exists
    if [ ! -f $USERSFILE ] ; then
        echo "Error: missing file $USERSFILE" | tee -a $LOG
        exit 1
    fi

    # check who is running the scipt
    cat $USERSFILE > /dev/null
    RETVAL=$?
    if [ $RETVAL -ne 0 ]; then
        echo "Error: You must be root to run this script"  | tee -a $LOG
        exit 1
    fi

    # get the password from 'users' file
    PASS=`grep admin $USERSFILE | awk '{print $2}'`
    export PGPASSWORD=$PASS
}

### define databases 
Define () {
    if [ -f $DEFINESQL ] ; then
        echo "Running $DEFINESQL ..." | tee -a $LOG
        psql -U admin -d template1 -f $DEFINESQL 2>&1 | tee -a $LOG
    else
        echo "Error: missing file $DEFINESQL" | tee -a $LOG
        exit 1
    fi
}

### populate lifemapper DB
Populate () {
    if [ -f $POPULATEPY ] ; then
        echo "Running $POPULATEPY ..." | tee -a $LOG
        /opt/python/bin/@PYTHONVER@ $POPULATEPY all 2>&1 | tee -a $LOG
    else
        echo "Error: Missing file $POPULATEPY" | tee -a $LOG
        exit 1
    fi
}

### read and populate taxonomy table
AddTaxonomy () {
    if [ -f $TAXONOMYPY ] ; then
        echo "Running $TAXONOMYPY ..." | tee -a $LOG
        /opt/python/bin/@PYTHONVER@ $TAXONOMYPY 2>&1 | tee -a $LOG
    else
        echo "Notice: $TAXONOMYPY does not exist (this may be expected)" | tee -a $LOG
        return 
    fi
}

### register LmCompute instance
RegisterCompute () {
    if [ -f $COMPUTEPY ] ; then
        echo "Running $COMPUTEPY ..." | tee -a $LOG
        /opt/python/bin/@PYTHONVER@ $COMPUTEPY 2>&1 | tee -a $LOG
    else
        echo "Error: Missing file $COMPUTEPY" | tee -a $LOG
        return 
    fi
}

### Main ###
if [ $# -ne 0 ]; then
    usage
    exit 0
fi 

SetDefaults
SetPermissions
SetPass
Define
Populate
AddTaxonomy
RegisterCompute
TimeStamp "# End"
