#!/bin/bash 
#
# Update @LMHOME@/config/config.lmserver.ini file with correct ip info  
#


usage () 
{
    echo "Usage: $0"
    echo "This script updates IPs in @LMHOME@/config/config.lmserver.ini file from"
    echo "the values set in rocks attributes LM_dbserver and LM_webserver."
    echo "If attributes are not set then the server public IP is used"

}

getAddress () {
    # public host address
    Addr=`/opt/rocks/bin/rocks list host attr localhost | grep Kickstart_PublicHostname | awk '{print $3}'`

    # check if we are on EC2
    x=$(curl -s -f http://169.254.169.254/latest/meta-data/local-ipv4 2> /dev/null)
    if [ "$?" == "0" ] ; then
        echo "INFO: This is EC2 host, using public IP in place of FQDN"
        Addr=$x
    fi

    # check for attribute for lifemapper dbserver 
    AddrDbserver=`/opt/rocks/bin/rocks list host attr localhost | grep LM_dbserver | grep -v _old | awk '{print $3}'`
    if [ "$AddrDbserver" = "true" ] || [ "$AddrDbserver" = "" ] ; then
        AddrDbserver=$Addr
    fi

    # check for attribute for lifemapper webserver 
    AddrWebserver=`/opt/rocks/bin/rocks list host attr localhost | grep LM_webserver | grep -v _old | awk '{print $3}'`
    if [ "$AddrWebserver" = "true" ] ||  [ "$AddrWebserver" = "" ] ; then
        AddrWebserver=$Addr
    fi
}

updateAddress () {
    # infile=@LMHOME@/LmServer/config/config.lmserver.ini.in
    # outfile=@LMHOME@/config/config.lmserver.ini

    ext=`/bin/date +%F`
    infile=@LMHOME@/config/config.lmserver.ini.$ext
    outfile=@LMHOME@/config/config.lmserver.ini
    
    # backup file
    mv $outfile $infile
    
    # replace variables
    sed  "s%@PUBLIC_FQDN@%$Addr%g; \
          s%@WEB_FQDN@%$AddrWebserver%g; \
          s%@DB_FQDN@%$AddrDbserver%g" $infile > $outfile
    fi
}

#### Main ####

if [ $# -ne 0 ]; then
    usage
    exit 0
fi 

getAddress
updateAddress
