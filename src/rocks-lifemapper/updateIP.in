#!/bin/bash 
#
# Update @LMHOME@/config/config.lmserver.ini file with correct ip info  
#


usage () 
{
    echo "Usage: $0"
    echo "This script updates IPs in @LMHOME@/config/config.lmserver.ini file from"
    echo "the values set in rocks attributes LM_dbserver and LM_webserver."
    echo "If attributes are not set then the server public IP is used"

}

getMakeflowParams () {
    cpuTotal=0
    nodecpus=`/opt/rocks/bin/rocks list host | grep Compute | awk '{print $3}'`
    for c in $nodecpus;
    do  
        echo 'next:'
        echo '  cpuTotal is' $cpuTotal
        echo '  c is' $c
        cpuTotal=$(( $cpuTotal + $c ))
        echo '  cpuTotal is' $cpuTotal
    done
    if [ $cpuTotal = 0 ]; then
        nodecount=`/opt/rocks/bin/rocks list host | grep Compute | wc -l`
        node1cpus=`/opt/rocks/bin/rocks list host | grep Compute | awk '{print $3}' | sed -n '1 p'`
        cpuTotal=$(( $nodecount * $node1cpus ))
        echo 'alternate method:'
        echo '  nodecount is' $nodecount
        echo '  nodecpus is' $nodecpus
        echo '  cpuTotal is' $cpuTotal
    fi
    MaxWorkers=$cpuTotal
    tmpMaxMFs=$(( $cpuTotal / 10 ))
    MaxMakeflows=$(($tmpMaxMFs>2?$tmpMaxMFs:2))
    echo '  MaxWorkers, MaxMakeflows =' $MaxWorkers $MaxMakeflows
}

getAddress () {
    # public host address
    Addr=`/opt/rocks/bin/rocks list host attr localhost | grep Kickstart_PublicHostname | grep -v _old | awk '{print $3}'`

    # check if we are on EC2
    x=$(curl -s -f http://169.254.169.254/latest/meta-data/local-ipv4 2> /dev/null)
    if [ "$?" == "0" ] ; then
        echo "INFO: This is EC2 host, using public IP in place of FQDN"
        Addr=$x
    fi

    # check for attribute for lifemapper dbserver 
    AddrDbserver=`/opt/rocks/bin/rocks list host attr localhost | grep LM_dbserver | grep -v _old | awk '{print $3}'`
    if [ "$AddrDbserver" = "true" ] || [ "$AddrDbserver" = "" ] ; then
        AddrDbserver=$Addr
    fi

    # check for attribute for lifemapper webserver 
    AddrWebserver=`/opt/rocks/bin/rocks list host attr localhost | grep LM_webserver | grep -v _old | awk '{print $3}'`
    if [ "$AddrWebserver" = "true" ] ||  [ "$AddrWebserver" = "" ] ; then
        AddrWebserver=$Addr
    fi
}

updateConfigVars () {
    infile=@LMHOME@/LmServer/config/config.lmserver.ini.in
    outfile=@LMHOME@/config/config.lmserver.ini
    
    if [ -f $outfile ] ; then
        bakext=`/bin/date +%F`
        echo '  File ' $outfile ' exists, saving to ' $outfile.$bakext 
        mv -f $outfile $outfile.$bakext
    fi
    
    echo '  Creating ' $outfile ' from ' $infile
    # replace variables
    sed  "s%@PUBLIC_FQDN@%$Addr%g; \
          s%@WEB_FQDN@%$AddrWebserver%g; \
          s%@DB_FQDN@%$AddrDbserver%g; \
          s%@MAX_MAKEFLOWS@%$MaxMakeflows%g; \
          s%@MAX_WORKERS@%$MaxWorkers%g" $infile > $outfile
}

updateWebhost () {
    infile=@DATADIR_SERVER@/sdm/elm.js.in
    outfile=@DATADIR_SERVER@/sdm/elm.js
    
    if [ -f $outfile ] ; then
        rm -f $outfile
    fi
    
    if [ -f $infile ] ; then    
        echo '  Creating ' $outfile ' from ' $infile
        # replace variables
        sed  "s%@PUBLIC_FQDN@%$AddrWebserver%g" $infile > $outfile
    else
        echo '  Missing input file ' $infile
    fi
}

# update permissions on config files
updatePerms () {
    GID=`grep lmwriter: /etc/group`
    if [ "$GID" != "" ] ; then
        chgrp  lmwriter /opt/lifemapper/config/config*.ini*
        chmod  664      /opt/lifemapper/config/config*.ini*
    fi
}

#### Main ####

if [ $# -ne 0 ]; then
    usage
    exit 0
fi 

getAddress
## updateWebhost
getMakeflowParams
updateConfigVars
updatePerms
